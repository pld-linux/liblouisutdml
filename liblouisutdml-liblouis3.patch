--- liblouisutdml-2.6.0/liblouisutdml/louisutdml.h.orig	2015-05-07 14:31:31.000000000 +0200
+++ liblouisutdml-2.6.0/liblouisutdml/louisutdml.h	2017-07-18 19:59:35.241446536 +0200
@@ -428,5 +429,5 @@
 
 void logWidecharBuf(logLevels level, const char *msg, const widechar *wbuf, int wlen);
 
-// void logMessage(logLevels level, const char *format, ...);
+void logMessage(logLevels level, const char *format, ...);
 #endif /*louisutdml_h */
--- liblouisutdml-2.7.0/liblouisutdml/louisutdml.h.orig	2017-09-20 13:58:06.000000000 +0200
+++ liblouisutdml-2.7.0/liblouisutdml/louisutdml.h	2018-12-21 05:27:44.631849763 +0100
@@ -117,7 +117,7 @@
   utf8 = 0,
   utf16,
   utf32,
-  ascii8
+  // ascii8 = EncodingType::ascii8
 } Encoding;
 
 typedef enum
--- liblouisutdml-2.7.0/liblouisutdml/readconfig.c.orig	2018-12-21 05:29:37.038515146 +0100
+++ liblouisutdml-2.7.0/liblouisutdml/readconfig.c	2018-12-21 05:29:43.175181743 +0100
@@ -65,7 +65,7 @@
   char *value2;
   int value2Length;
 }
-FileInfo;
+ConfFileInfo;
 
 static char pathEnd[2];
 static double paperWidth;
@@ -78,7 +78,7 @@
 static int fatalErrorCount = 0;
 
 static void
-configureError (FileInfo * nested, char *format, ...)
+configureError (ConfFileInfo * nested, char *format, ...)
 {
   char buffer[1024];
   va_list arguments;
@@ -215,7 +215,7 @@
 }
 
 static char *
-findTable (FileInfo * nested)
+findTable (ConfFileInfo * nested)
 {
   char trialPath[MAXNAMELEN];
   char filePath[MAXNAMELEN];
@@ -253,7 +253,7 @@
 }
 
 static int
-controlCharValue (FileInfo * nested)
+controlCharValue (ConfFileInfo * nested)
 {
 /*Decode centrol characters*/
   int k = 0;
@@ -295,13 +295,13 @@
   return 1;
 }
 
-static int compileConfig (FileInfo * nested);
+static int compileConfig (ConfFileInfo * nested);
 
 int
 config_compileSettings (const char *fileName)
 {
 /*Compile an input file or string */
-  FileInfo nested;
+  ConfFileInfo nested;
   char completePath[MAXNAMELEN];
   if (!*fileName)
     return 1;			/*Probably run with defaults */
@@ -329,7 +329,7 @@
 }
 
 static int
-getLine (FileInfo * nested)
+getLine (ConfFileInfo * nested)
 {
   int lineLen = 0;
   int ch;
@@ -369,7 +369,7 @@
 }
 
 static int
-parseLine (FileInfo * nested)
+parseLine (ConfFileInfo * nested)
 {
   char *curchar = NULL;
   int ch = 0;
@@ -468,7 +468,7 @@
 }
 
 static int
-checkActions (FileInfo * nested, const char **actions)
+checkActions (ConfFileInfo * nested, const char **actions)
 {
   int actionNum = find_action (actions, nested->action);
   if (actionNum == -1)
@@ -477,7 +477,7 @@
 }
 
 static int
-checkValues (FileInfo * nested, const char **values)
+checkValues (ConfFileInfo * nested, const char **values)
 {
   int k;
   for (k = 0; values[k]; k += 2)
@@ -494,7 +494,7 @@
 }
 
 static unsigned int
-hexValue (FileInfo * nested, const char *digits)
+hexValue (ConfFileInfo * nested, const char *digits)
 {
   int length = strlen (digits);
   int k;
@@ -520,7 +520,7 @@
 }
 
 static unsigned int
-convertValue (FileInfo * nested, const char *number)
+convertValue (ConfFileInfo * nested, const char *number)
 {
   if (number[0] == '0' && number[1] == 'x')
     return hexValue (nested, &number[2]);
@@ -534,7 +534,7 @@
 }
 
 static int
-orValues (FileInfo * nested, const char **values)
+orValues (ConfFileInfo * nested, const char **values)
 {
   int result = 0;
   int k;
@@ -564,7 +564,7 @@
 }
 
 static int
-checkSubActions (FileInfo * nested, const char **mainActions, const char
+checkSubActions (ConfFileInfo * nested, const char **mainActions, const char
 		 **subActions)
 {
   int subAction;
@@ -588,7 +588,7 @@
 }
 
 static int
-compileConfig (FileInfo * nested)
+compileConfig (ConfFileInfo * nested)
 {
   static const char *mainActions[] = {
     "outputFormat",
--- liblouisutdml-2.7.0/liblouisutdml/semantics.c.orig	2017-09-20 13:58:06.000000000 +0200
+++ liblouisutdml-2.7.0/liblouisutdml/semantics.c	2018-12-21 05:30:17.571848019 +0100
@@ -47,7 +47,7 @@
   int unedited;
   char line[5 * MAXNAMELEN];
 }
-FileInfo;
+SemFileInfo;
 
 #define HASHSIZE 383
 #define MAXINSERTS 256
@@ -91,10 +91,10 @@
 static int errorCount = 0;
 static const xmlChar *rootName;
 static xmlXPathContext *xpathCtx = NULL;
-static int registerNamespaces (FileInfo * Nested, xmlXPathContextPtr
+static int registerNamespaces (SemFileInfo * Nested, xmlXPathContextPtr
 			       xpathCtx, const xmlChar * nsList);
 static void
-semanticError (FileInfo * nested, char *format, ...)
+semanticError (SemFileInfo * nested, char *format, ...)
 {
   char buffer[MAXNAMELEN];
   va_list arguments;
@@ -342,7 +342,7 @@
 }
 
 static widechar
-hexValue (FileInfo * nested, const xmlChar * digits, int length)
+hexValue (SemFileInfo * nested, const xmlChar * digits, int length)
 {
   int k;
   unsigned int binaryValue = 0;
@@ -367,7 +367,7 @@
 }
 
 static InsertsType *
-encodeInsertions (FileInfo * nested, xmlChar * insertions, int length)
+encodeInsertions (SemFileInfo * nested, xmlChar * insertions, int length)
 {
   int k = 0;
   int prevk = 0;
@@ -642,7 +642,7 @@
   return -1;
 }
 static int
-compileLine (FileInfo * nested)
+compileLine (SemFileInfo * nested)
 {
   char *curchar = NULL;
   int ch = 0;
@@ -835,7 +835,7 @@
 }
 
 static int
-getALine (FileInfo * nested)
+getALine (SemFileInfo * nested)
 {
   /*Read a line of chars from an input file */
   int ch;
@@ -867,7 +867,7 @@
 sem_compileFile (const char *fileName)
 {
   /*Compile an input file */
-  FileInfo nested;
+  SemFileInfo nested;
   char completePath[MAXNAMELEN];
   int haveAppended = 0;
   logMessage(LOG_INFO, "Begin sem_compileFile: fileName=%s", fileName);
@@ -1025,7 +1025,7 @@
  * Returns 1 on success and 0 on failure.
  */
 static int
-registerNamespaces (FileInfo * nested, xmlXPathContextPtr xpathCtx, const
+registerNamespaces (SemFileInfo * nested, xmlXPathContextPtr xpathCtx, const
 		    xmlChar * nsList)
 {
   xmlChar *nsListDup;
